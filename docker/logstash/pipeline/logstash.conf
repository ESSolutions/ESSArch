input {
	tcp {
		port => 5000
		codec => json
	}
}

## Add your filters / logstash plugins configuration here
filter {
    json {
        source => "[message][raw]"
    }

    # Workaround for HTTP logs created from "django.channels.server" that have an extra "\u001b[m" at start and "\u001b[0m" at end.
    if [type] == "django_http" {
        grok {
            match => { "message" => "m%{URIPROTO:protocol} %{WORD:method} %{URIPATHPARAM:request} %{NUMBER:status_code} \[%{NUMBER:duration}, %{HOSTPORT:host}\]" }
        }
        mutate {
            remove_field => [ "message" ]
        }
    }
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
