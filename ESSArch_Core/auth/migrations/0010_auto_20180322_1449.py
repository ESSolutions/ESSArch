# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-03-22 13:49
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import groups_manager.models
import mptt.fields

from ESSArch_Core.fields import JSONField


def forward(apps, schema_editor):
    OldMember = apps.get_model("groups_manager", "Member")
    OldGroup = apps.get_model("groups_manager", "Group")
    OldGroupMember = apps.get_model("groups_manager", "GroupMember")

    NewMember = apps.get_model("essauth", "Member")
    NewGroup = apps.get_model("essauth", "Group")
    NewGroupMember = apps.get_model("essauth", "GroupMember")
    db_alias = schema_editor.connection.alias

    NewMember.objects.bulk_create(
        (NewMember(
            id=old.id,
            first_name=old.first_name,
            last_name=old.last_name,
            username=old.username,
            email=old.email,
            django_auth_sync=old.django_auth_sync,
            django_user=old.django_user,
        ) for old in OldMember.objects.all()), batch_size=200
    )

    NewGroup.objects.bulk_create(
        (NewGroup(
            id=old.id,
            name=old.name,
            codename=old.codename,
            description=old.description,
            comment=old.comment,
            full_name=old.full_name,
            properties=old.properties,
            django_auth_sync=old.django_auth_sync,
            parent_id=getattr(old.parent, 'pk', None),
            lft=old.lft,
            rght=old.rght,
            tree_id=old.tree_id,
            level=old.level,
            django_group=old.django_group,
            group_type=old.group_type,
        ) for old in OldGroup.objects.all()), batch_size=200
    )

    NewGroupMember.objects.bulk_create(
        (NewGroupMember(
            id=old.id,
            expiration_date=old.expiration_date,
            group_id=getattr(old.group, 'pk', None),
            member_id=getattr(old.member, 'pk', None),

        ) for old in OldGroupMember.objects.all()), batch_size=200
    )

    for new_group_member in NewGroupMember.objects.all():
        old_group_member = OldGroupMember.objects.get(pk=new_group_member.pk)
        new_group_member.roles.add(*list(old_group_member.roles.all()))


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('groups_manager', '0004_0_6_0_groupmember_expiration_date'),
        ('essauth', '0009_auto_20180322_1135'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('codename', models.SlugField(blank=True, max_length=255, verbose_name='codename')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('comment', models.TextField(blank=True, default='', verbose_name='comment')),
                ('full_name', models.CharField(blank=True, default='', max_length=255, verbose_name='full name')),
                ('properties', JSONField(blank=True, default={}, verbose_name='properties')),
                ('django_auth_sync', models.BooleanField(blank=True, default=True)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_essauth_group_set', to='essauth.Group', verbose_name='parent')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('django_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='essauth_group', to='auth.Group')),
                ('group_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='essauth_groups', to='groups_manager.GroupType', verbose_name='group type')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'default_permissions': [],
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
            bases=(groups_manager.models.GroupRelationsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('username', models.CharField(blank=True, default='', max_length=255, verbose_name='username')),
                ('email', models.EmailField(blank=True, default='', max_length=255, verbose_name='email')),
                ('django_auth_sync', models.BooleanField(blank=True, default=True, verbose_name='django auth sync')),
                ('django_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='essauth_member', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('last_name', 'first_name'),
                'abstract': False,
                'default_permissions': [],
            },
            bases=(groups_manager.models.MemberRelationsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration_date', models.DateTimeField(default=None, null=True, verbose_name='expiration date')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_membership', to='essauth.Group', verbose_name='group')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_membership', to='essauth.Member', verbose_name='member')),
                ('roles', models.ManyToManyField(related_name='group_memberships', to='groups_manager.GroupMemberRole', verbose_name='roles')),
            ],
            options={
                'ordering': ('group', 'member'),
                'abstract': False,
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='group_members',
            field=models.ManyToManyField(related_name='essauth_groups', through='essauth.GroupMember', to='essauth.Member'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmember',
            unique_together=set([('group', 'member')]),
        ),
        migrations.RunPython(forward, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='userprofile',
            name='current_organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='essauth.Group'),
        ),
    ]
