# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-05 15:05
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('countries_plus', '0005_auto_20160224_1804'),
        ('WorkflowEngine', '0073_processstep_context'),
        ('languages_plus', '0004_auto_20171214_0004'),
        ('tags', '0015_auto_20181217_1154'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level_of_detail', models.IntegerField(choices=[(0, 'minimal'), (1, 'partial'), (2, 'full')], db_index=True, verbose_name='level of detail')),
                ('record_status', models.IntegerField(choices=[(0, 'draft'), (1, 'final')], db_index=True, verbose_name='record status')),
                ('script', models.IntegerField(choices=[(0, 'latin')], db_index=True, verbose_name='script')),
                ('create_date', models.DateTimeField(verbose_name='create date')),
                ('revise_date', models.DateTimeField(null=True, verbose_name='revise date')),
                ('start_date', models.DateField(null=True, verbose_name='start date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='languages_plus.Language', verbose_name='language')),
            ],
        ),
        migrations.CreateModel(
            name='AgentFunction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='functions', to='agents.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentIdentifier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('identifier', models.TextField(verbose_name='identifier')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identifiers', to='agents.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentIdentifierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='AgentName',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('main', models.TextField(verbose_name='main')),
                ('part', models.TextField(blank=True, verbose_name='part')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateField(null=True, verbose_name='start date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('certainty', models.NullBooleanField(verbose_name='certainty')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names', to='agents.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentNameType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='AgentNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField(verbose_name='text')),
                ('href', models.TextField(blank=True, verbose_name='href')),
                ('create_date', models.DateTimeField(verbose_name='create date')),
                ('revise_date', models.DateTimeField(null=True, verbose_name='revise date')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='agents.Agent', verbose_name='agent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentNoteType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='AgentPlace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateField(null=True, verbose_name='start date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentPlaceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='AgentRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_date', models.DateField(null=True, verbose_name='start date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='create date')),
                ('revise_date', models.DateTimeField(auto_now=True, verbose_name='revise date')),
                ('agent_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_relations_a', to='agents.Agent')),
                ('agent_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_relations_b', to='agents.Agent')),
            ],
        ),
        migrations.CreateModel(
            name='AgentRelationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='AgentTagLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True, verbose_name='start date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_links', to='agents.Agent', verbose_name='agent')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_links', to='tags.TagVersion', verbose_name='tag')),
            ],
        ),
        migrations.CreateModel(
            name='AgentTagLinkRelationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='AgentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cpf', models.CharField(choices=[('corporatebody', 'corporate body'), ('person', 'person'), ('family', 'family')], db_index=True, max_length=20)),
                ('sub_type', models.TextField(blank=True, verbose_name='sub type')),
                ('legal_status', models.TextField(verbose_name='legal status')),
            ],
        ),
        migrations.CreateModel(
            name='AuthorityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='MainAgentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='RefCode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('repository_code', models.CharField(max_length=255, verbose_name='repository code')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ref_codes', to='countries_plus.Country', verbose_name='country code')),
            ],
        ),
        migrations.CreateModel(
            name='SourcesOfAuthority',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField(verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('href', models.TextField(blank=True, verbose_name='href')),
                ('start_date', models.DateField(null=True, verbose_name='start date')),
                ('end_date', models.DateField(null=True, verbose_name='end date')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AuthorityType')),
            ],
        ),
        migrations.CreateModel(
            name='Topography',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('alt_name', models.TextField(blank=True, verbose_name='alternative name')),
                ('type', models.CharField(max_length=255, verbose_name='type')),
                ('main_category', models.TextField(blank=True, verbose_name='main category')),
                ('sub_category', models.TextField(blank=True, verbose_name='sub category')),
                ('reference_code', models.TextField(verbose_name='reference code')),
                ('start_year', models.DateField(null=True, verbose_name='start year')),
                ('end_year', models.DateField(null=True, verbose_name='end year')),
                ('lng', models.DecimalField(decimal_places=6, max_digits=9, null=True, verbose_name='longitude')),
                ('lat', models.DecimalField(decimal_places=6, max_digits=9, null=True, verbose_name='latitude')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='topography',
            unique_together=set([('name', 'type')]),
        ),
        migrations.AddField(
            model_name='agenttype',
            name='main_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.MainAgentType'),
        ),
        migrations.AddField(
            model_name='agenttaglink',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AgentTagLinkRelationType', verbose_name='type'),
        ),
        migrations.AddField(
            model_name='agentrelation',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AgentRelationType'),
        ),
        migrations.AddField(
            model_name='agentplace',
            name='topography',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='agents.Topography'),
        ),
        migrations.AddField(
            model_name='agentplace',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AgentPlaceType'),
        ),
        migrations.AddField(
            model_name='agentnote',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AgentNoteType', verbose_name='type'),
        ),
        migrations.AddField(
            model_name='agentname',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AgentNameType'),
        ),
        migrations.AddField(
            model_name='agentidentifier',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='agents.AgentIdentifierType', verbose_name='type'),
        ),
        migrations.AddField(
            model_name='agent',
            name='mandates',
            field=models.ManyToManyField(related_name='agents', to='agents.SourcesOfAuthority', verbose_name='mandates'),
        ),
        migrations.AddField(
            model_name='agent',
            name='places',
            field=models.ManyToManyField(related_name='agents', through='agents.AgentPlace', to='agents.Topography'),
        ),
        migrations.AddField(
            model_name='agent',
            name='ref_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agents', to='agents.RefCode'),
        ),
        migrations.AddField(
            model_name='agent',
            name='related_agents',
            field=models.ManyToManyField(through='agents.AgentRelation', to='agents.Agent'),
        ),
        migrations.AddField(
            model_name='agent',
            name='tags',
            field=models.ManyToManyField(related_name='agents', through='agents.AgentTagLink', to='tags.TagVersion'),
        ),
        migrations.AddField(
            model_name='agent',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents', to='WorkflowEngine.ProcessTask'),
        ),
        migrations.AddField(
            model_name='agent',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agents', to='agents.AgentType'),
        ),
        migrations.AlterUniqueTogether(
            name='refcode',
            unique_together=set([('country', 'repository_code')]),
        ),
        migrations.AlterUniqueTogether(
            name='agentrelation',
            unique_together=set([('agent_a', 'agent_b', 'type')]),
        ),
    ]
